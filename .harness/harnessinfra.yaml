pipeline:
  name: harness-infra
  identifier: harnessinfra
  projectIdentifier: development
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: apply
        identifier: apply
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformPlan
                  name: plan
                  identifier: pla
                  spec:
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          type: Github
                          spec:
                            gitFetchType: Branch
                            connectorRef: account.Github
                            repoName: rssnyder/harness-infra
                            branch: main
                            folderPath: terraform/
                      secretManagerRef: harnessSecretManager
                      environmentVariables:
                        - name: AWS_REGION
                          value: us-west-2
                          type: String
                        - name: AWS_ACCESS_KEY_ID
                          value: <+secrets.getValue("aws_access_key_id")>
                          type: String
                        - name: AWS_SECRET_ACCESS_KEY
                          value: <+secrets.getValue("aws_secret_access_key")>
                          type: String
                        - name: HARNESS_PLATFORM_API_KEY
                          value: <+secrets.getValue("HARNESS_PLATFORM_API_KEY")>
                          type: String
                        - name: HARNESS_ACCOUNT_ID
                          value: wlgELJ0TTre5aZhzpt8gVA
                          type: String
                    provisionerIdentifier: something
                    delegateSelectors:
                      - riley-sa-cluser-development
                  timeout: 10m
                  failureStrategies: []
              - step:
                  type: HarnessApproval
                  name: approve
                  identifier: approve
                  spec:
                    approvalMessage: Please review the plan step output and approve based on the changes specified.
                    includePipelineExecutionHistory: true
                    approvers:
                      userGroups:
                        - account._account_all_users
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
              - step:
                  type: TerraformApply
                  name: apply
                  identifier: apply
                  spec:
                    configuration:
                      type: InheritFromPlan
                    provisionerIdentifier: something
                  timeout: 10m
        tags: {}
  storeType: INLINE
